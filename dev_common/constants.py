from pathlib import Path
from typing import List


# FORMATS
LINE_SEPARATOR = f"\n{'=' * 70}\n"
LINE_SEPARATOR_NO_ENDLINE = f"{'=' * 70}"

# Obsidian
OBSIDIAN_VAULT_NAME = "ObsidianWorkVault"  # The exact name of your Obsidian vault.
OBSIDIAN_VAULT_PATH = f"{Path.home()}/obsidian_work_vault"  # The full local path to your vault.

# GL
GL_BASE_URL = "https://gitlab.com"
INTELLIAN_ADC_GROUP = "intellian_adc"
PROTOTYPING_SUB_GROUP = "prototyping"
GERRIT_OW = "gerrit_mirror/oneweb"

# IESA REPO_NAMES
IESA_OW_SW_TOOLS_REPO_NAME = "oneweb_project_sw_tools"
IESA_TISDK_TOOLS_REPO_NAME = "tisdk_tools"
IESA_INTELLIAN_PKG_REPO_NAME = "intellian_pkg"
IESA_INSENSE_SDK_REPO_NAME = "insensesdk"
IESA_ADC_LIB_REPO_NAME = "adc_lib"
IESA_SPIBEAM_REPO_NAME = "submodule_spibeam"
IESA_UPGRADE_REPO_NAME = "upgrade"
IESA_ALL_COMPONENT_REPOS: List[str] = [IESA_TISDK_TOOLS_REPO_NAME, IESA_INTELLIAN_PKG_REPO_NAME,
                                       IESA_INSENSE_SDK_REPO_NAME, IESA_ADC_LIB_REPO_NAME, IESA_SPIBEAM_REPO_NAME, IESA_UPGRADE_REPO_NAME]
# IESA GL TOKEN KEYS
GL_OW_SW_TOOLS_TOKEN_KEY_NAME = "GITLAB_OW_SW_TOOLS_TOKEN"
GL_TISDK_TOKEN_KEY_NAME = "GITLAB_TISDK_TOKEN"
GL_INSENSE_SDK_TOKEN_KEY_NAME = "GITLAB_INSENSE_SDK_TOKEN"
GL_ADC_LIB_TOKEN_KEY_NAME = "GITLAB_ADC_LIB_TOKEN"
GL_INTELLIAN_PKG_TOKEN_KEY_NAME = "GITLAB_INTELLIAN_PKG_TOKEN"
GL_SPIBEAM_TOKEN_KEY_NAME = "GITLAB_SPIBEAM_TOKEN"
GL_UPGRADE_TOKEN_KEY_NAME = "GITLAB_UPGRADE_TOKEN"

# NETWORKS
SSM_IP_PREFIX = "192.168"
ACU_IP = "192.168.100.254"
ACU_USER = "root"
ACU_VAR_LOG_PATH = Path("/var/log")
ACU_FLASH_LOGS_PATH = Path("/home") / ACU_USER / "flash_logs/"
LIST_MP_IPS = [F"{SSM_IP_PREFIX}.100.54", F"{SSM_IP_PREFIX}.100.56", F"{SSM_IP_PREFIX}.100.57", F"{SSM_IP_PREFIX}.100.60",
               F"{SSM_IP_PREFIX}.100.61", F"{SSM_IP_PREFIX}.100.62", F"{SSM_IP_PREFIX}.100.64"]
LIST_FD_IPS = [F"{SSM_IP_PREFIX}.101.79", F"{SSM_IP_PREFIX}.101.126"]
LIST_HD_IPS = [F"{SSM_IP_PREFIX}.101.65", F"{SSM_IP_PREFIX}.100.70",
               F"{SSM_IP_PREFIX}.100.85", F"{SSM_IP_PREFIX}.101.97"]
# PATHS
DOWNLOAD_FOLDER_PATH = Path.home() / "downloads"
REPO_PATH = Path.home() / "local_tools/"
AVAILABLE_TOOLS_PATH = REPO_PATH / "available_tools"
CREDENTIALS_FILE_PATH = REPO_PATH / ".my_credentials.env"
OW_SW_PATH = Path.home() / "ow_sw_tools"
CORE_REPOS_PATH = Path.home() / "workspace" / "intellian_core_repos/"
TEMP_FOLDER_PATH = REPO_PATH / "temp"
ACU_LOG_PATH = TEMP_FOLDER_PATH / "acu_logs/"

INSENSE_SDK_REPO_PATH = CORE_REPOS_PATH / IESA_INSENSE_SDK_REPO_NAME
DOWNLOADS_PATH = Path.home() / "downloads"

OW_OUTPUT_IESA_PATH = OW_SW_PATH / "install_iesa_tarball.iesa"
OW_BUILD_FOLDER_PATH = OW_SW_PATH / "tmp_build/"
OW_KIM_FTM_FW_PATH = OW_SW_PATH / "packaging/opt_etc/kim_ftm_fw/"
OW_KIM_RCVR_VERSION_FILE_PATH = OW_KIM_FTM_FW_PATH / "kim_rcvr_version.txt"
OW_BUILD_OUTPUT_FOLDER_PATH = OW_BUILD_FOLDER_PATH / "out"
OW_BUILD_BINARY_OUTPUT_PATH = OW_BUILD_OUTPUT_FOLDER_PATH / "bin"
IESA_MANIFEST_RELATIVE_PATH = f"tools/manifests/iesa_manifest_gitlab.xml"
IESA_MANIFEST_FILE_PATH = OW_SW_PATH / IESA_MANIFEST_RELATIVE_PATH

# WSL COMMANDS
CMD_WSLPATH = "wslpath"
CMD_EXPLORER = "explorer.exe"
CMD_GITINGEST = "gitingest"
CMD_GIT = "git"
WSL_SELECT_FLAG = "/select,"

# SYMBOLS
UNDERSCORE = "_"
HYPHEN = "-"

OBSIDIAN_API_TOKEN_KEY_NAME = "OBSIDIAN_API_TOKEN"
JIRA_API_TOKEN_KEY_NAME = "JIRA_API_TOKEN"
JIRA_COMPANY_URL_KEY_NAME = "JIRA_COMPANY_URL"
JIRA_USERNAME_KEY_NAME = "JIRA_USERNAME"

MANIFEST_SOURCE_LOCAL = "local"
MANIFEST_SOURCE_REMOTE = "remote"
BUILD_TYPE_IESA = "iesa"
BUILD_TYPE_BINARY = "binary"

# File extensions and suffixes
FILE_PREFIX = "file_"
GIT_SUFFIX = ".git"
TXT_EXTENSION = ".txt"

# Argument name constants
ARGUMENT_LONG_PREFIX = "--"
ARGUMENT_SHORT_PREFIX = "-"
ARG_VERSION_OR_FW_PATH = f"{ARGUMENT_LONG_PREFIX}version_or_fw_path"
ARG_DEFAULT_OW_MANIFEST_BRANCH = f"{ARGUMENT_LONG_PREFIX}ow_default_manifest_branch"
ARG_TOOL_PREFIX = f"{ARGUMENT_LONG_PREFIX}prefix"
ARG_TOOL_FOLDER_PATTERN = f"{ARGUMENT_LONG_PREFIX}folder_pattern"
# ARG_TOOL_ROOT_PATH = f"{ARGUMENT_LONG_PREFIX}root_path"
ARG_PATH_LONG = f"{ARGUMENT_LONG_PREFIX}path"
ARG_PATHS_LONG = f"{ARGUMENT_LONG_PREFIX}paths"
ARG_PATH_SHORT = f"{ARGUMENT_SHORT_PREFIX}p"
ARG_PATHS_SHORT = f"{ARGUMENT_SHORT_PREFIX}p"
ARG_TICKET_URL = f"{ARGUMENT_LONG_PREFIX}jira_url"
ARG_OUTPUT_DIR = f"{ARGUMENT_LONG_PREFIX}output_dir"
ARG_OUTPUT_DIR_SHORT = f"{ARGUMENT_SHORT_PREFIX}o"
ARG_NO_OPEN_EXPLORER = f"{ARGUMENT_LONG_PREFIX}no-open-explorer"
ARG_MAX_FOLDERS = f"{ARGUMENT_LONG_PREFIX}max-folders"
ARG_IS_GEN_CODING_TASK = F"{ARGUMENT_LONG_PREFIX}is_gen_coding_task"
ARG_TEMPLATE_PATH = f"{ARGUMENT_LONG_PREFIX}template_path"
ARG_VAULT_PATH = f"{ARGUMENT_LONG_PREFIX}vault_path"
ARG_NOTE_REL_PATH = f"{ARGUMENT_LONG_PREFIX}dir_to_copy_to"
ARG_NOTE_REL_PATHS_TO_ADD_CONTENT = f"{ARGUMENT_LONG_PREFIX}paths_to_link_from"
ARG_REPO_NAME = f"{ARGUMENT_LONG_PREFIX}repo_name"
ARG_SOURCE_BRANCH = f"{ARGUMENT_LONG_PREFIX}source_branch"
ARG_TARGET_BRANCH = f"{ARGUMENT_LONG_PREFIX}target_branch"
ARG_INTERACTIVE = f"{ARGUMENT_LONG_PREFIX}interactive"
# ARG VALUES
EMPTY_STR_VALUE = ""
TRUE_STR_VALUE = "true"
BRANCH_MANPACK_MASTER = "manpack_master"
BRANCH_MASTER = "master"
OW_MAIN_BRANCHES = [BRANCH_MANPACK_MASTER, BRANCH_MASTER]

# New common argument names for Inertial Sense tools
ARG_UPDATE_FW = f"{ARGUMENT_LONG_PREFIX}update_fw"
ARG_UPDATE_SDK = f"{ARGUMENT_LONG_PREFIX}update_sdk"
ARG_NO_PROMPT = f"{ARGUMENT_LONG_PREFIX}no_prompt"
ARG_SDK_PATH = f"{ARGUMENT_LONG_PREFIX}sdk_path"

# Emojis
SUCCESS_EMOJI = "‚úÖ"
FAILURE_EMOJI = "‚ùå"
CELEBRATION_EMOJI = "üéâ"

# Messages
LOG_PREFIX_MSG_INFO = "[INFO]"
LOG_PREFIX_MSG_SUCCESS = "[SUCCESS]"
LOG_PREFIX_MSG_ERROR = "[ERROR]"
LOG_PREFIX_MSG_WARNING = "[WARNING]"
LOG_PREFIX_MSG_FATAL = "[FATAL]"
